<!doctype html><html><head><meta http-equiv="Content-type" content="text/html; charset=utf-8"><meta charset="UTF-8">
</head><body>

<link rel="stylesheet" href="../weblib/bigcbxrdo.css"/>

<input type="checkbox" class="css-checkbox" id="chkVod" onClick="alert('TODO');return false;"/>
<label for="chkVod" class="css-label">Big Checkbox</label>

<!-- 1.8.3暂时还支持IE<9，也没什么大问题就先用着 -->
<script src="../weblib/jquery.1.8.3.min.js"></script>

<!--要用到 jq的大概基础包-->
<link rel="stylesheet" type="text/css" href="../weblib/jqeasyui_latest/themes/gray/easyui.css">
<link rel="stylesheet" type="text/css" href="../weblib/jqeasyui_latest/themes/icon.css">
<link rel="stylesheet" type="text/css" href="../weblib/jqeasyui_latest/themes/color.css">
<script type="text/javascript" src="../weblib/jqeasyui_latest/jquery.easyui.min.js"></script>

<!-- 以下的js 其实不是全部要用到的，只是还没时间整理，先插着用吧 -->
<script src="../weblib/src.common.js"></script>
<script src="../weblib/src.content.js"></script>
<script src="../weblib/src.easyui.mgdefault.js"></script>
<script src="../weblib/src.mg.json.js"></script>
<script src="../weblib/src.mg.aj.2014.js"></script>
<script src="../weblib/src.mg_core.js"></script>
<script src="../weblib/src.async.js"></script>
<script src="../weblib/src.mgrender2014.js"></script>

<!-- 我们对 jqeasyUi的Grid/Dialog的简单二次封装，方便我们使用 -->
<script src="../weblib/src.SaasTool.js"></script>
<script src="../weblib/src.mgSimpleGrid.20150105.js"></script>
<script src="../weblib/src.mgSimpleDlg.20141215.js"></script>

<meta charset="utf-8">
<style>
	#TestObjList td{width:140px;}
</style>
<body>
	<script>
		/*	//$.parser.parse();
		setTimeout(function(){
			$("#divTestWJC").html('<a id="btnListNew" href="javascript:void(0);" class="easyui-linkbutton" >Test</a>');
			//$.parser.parse("#divTestWJC");
		},2000);
	*/
	</script>
	<h3>EASYUI EXAMPLE</h3>
	<div>
		YYYY-MM-DD:
					<input id="ForDay" type="text" style="width:120px; height:25px;" class="easyui-datebox">
		YYYY-MM:
					<input id="ForMonth" type="text" style="width:120px; height:25px;" class="easyui-datebox">
	</div>
	<!--
	<div style="width:100%;height:180px;border:1px solid;">
	 <table class="easyui-datagrid" title="Basic DataGrid" style="width:100%;height:100%"
              data-options="rownumbers:true,singleSelect:true,collapsible:true,url:'datagrid_data1.json',method:'get'">
        <thead>
            <tr>
							<th data-options="field:'ck',checkbox:true"></th>
                <th data-options="field:'itemid',width:80">Item ID</th>
                <th data-options="field:'productid',width:100">Product</th>
                <th data-options="field:'listprice',width:80,align:'right'">List Price</th>
                <th data-options="field:'unitcost',width:80,align:'right'">Unit Cost</th>
                <th data-options="field:'attr1',width:250">Attribute</th>
                <th data-options="field:'status',width:60,align:'center'">Status</th>
            </tr>
        </thead>
    </table>
	</div>
	-->
	<div id="div_list">
		<a id="btnListNew" href="javascript:void(0);" class="easyui-linkbutton" >Test</a><br>
		<div id="divGrid" style="width:100%;height:180px;" ></div>
		<div id="divDlg" ></div>
	</div>
	<script id="tplCURD" class="nodisplay" type="text/mgtpl">
	<div class="easyui-dialog"  style="width:400px;padding:10px 20px">
		<form method="post">
			<table width="100%">
				<tr>
					<td><font class="fitem_label">ID:</font></td>
					<td><input name="id" class="easyui-textbox" readonly="true"></td>
				</tr>
				<tr>
					<td><font class="fitem_label">testobj_key:</font></td>
					<td><input name="testobj_key" id="text" class="easyui-textbox"><input type="hidden" name="testobj_status"></td>
				</tr>
        		<tr>
					<td><font class="fitem_label">testobj_remark:</font></td>
					<td><input name="testobj_remark" class="easyui-textbox"></td>
				</tr>
     		</table>
     	</form>
	</div>
	</script>
	<script id="tplMultiDelete" class="nodisplay" type="text/mgtpl">
	<div class="easyui-dialog" style="width:400px;padding:10px 20px">
		<form method="post">
			<table width="100%">
				<tr>
					<td>ID</td>
				</tr>
				<tr>
					<td><input name="id" class="easyui-textbox" readonly='readonly'></td>
				</tr>
			</table>
		</form>
	</div>
	</script>
<!--
<h3>JQuery + EasyUI =&gt; ApiXXX =&gt; LgcXXX =&gt; OrmXXX</h3>
<ul>
	<li><a href="javascript:TestPingPong();">Test ApiTester.PingPong.api</a></li>
	<li><a href="javascript:AddTestObj();">Add TestObj</a></li>
	<li><a href="javascript:ListTestObj();">List TestObj</a></li>
</ul>
Send<div id="divSend"></div>
Receive<div id="divReceive"></div>
Debug<div id="divDebug"></div>
<table id="TestObjList" border=1 cellpadding="0" cellspacing='0'>
	<thead>
		<tr><td>id</td><td>TestObjKey</td><td>Remark</td><td>Action</td></tr>
	</thead>
	<tbody id="TestObjBody">
	</tbody>
</table>
-->

<script>
	//EASY UI
	var _toolbar={
		"Reload":{title:"Reload"}
		,"Add":{
			title:"Add"
			,onClick:function(o){
				//TODO 新建CRUD_DLG，然后确认后远程opt，再返回之后就...
				//要在这里写进去远程opt入口，和处理函数
				var dlg=new mgSimpleDlg({
					//wintitle:'Add HO',//如果隐藏则使用action
					values:{"testobj_status":"0"},//[初始值]
					a:o.a,//[事件来源]:影响出现的位置.
					tpl_id:'tplCURD',
					target_id:'divDlg',//目标div
					_c:'ApiTester',_m:'SaveTestObj',//<Remote for the action>
					action: 'Add',//<对应动作>
					//onBeforeConfirm:_beforeConfirm,//submit前数据的验证
					onCallback: function(){		
						grid_user.reload();
					},
				});
				return true;
			}
		}
	};
	//初始化一个easy ui 对象
	var grid_user = new mgSimpleGrid({
		targetDivId: "divGrid"//目标操作区.
		, fMultiAction: true
		//,iActionWidth:250
		, pageSize: 20
		, data_opt: {_c: "ApiTester", _m: "ListTestObj"}

		//			,filterPanelId:'tplFilter'//内嵌方式，用模板.
		//			,fShowFilterPanel:true
		,actionFormatter:function(cellValue,row,index){
			var rt=""; 
			if(!row) return rt;
			rt+=clsSimpleGrid.create_action(index,'Edit',"Edit");
			rt+=clsSimpleGrid.create_action(index,'Delete',"Delete");
			return rt;
		}
		,ToolBar:_toolbar    // grid列表按钮顶部按钮上面已经定义为添加一行记录
		, options: {
			//rownumbers: true//行号的高度有BUG，如果我们要用，还是从API那里下手脚吧！
			//,
			fitColumns: true
		}
	});
	//绑定action
	$(grid_user).on('RowAction',function(evt,o){
		if(!o) return false;
		switch(o.action){
			case 'Edit':
			$("#tplCURD").find("div:eq(0)").addClass("easyui-dialog");
			var dlg=new mgSimpleDlg({
				//wintitle:'Edit',//如果隐藏则使用action
				values:o.rowdata//[初始值]
				,a:o.a//[事件来源]:影响出现的位置.
				,tpl_id:'tplCURD'
				,target_id:'divDlg'//目标div
				,_c:'ApiTester',_m:'SaveTestObj'//<Remote for the action>
				,action: 'Edit'//<对应动作>
				//,onBeforeConfirm:_beforeConfirm//submit前数据的验证
				,onCallback:_callback_dlg_default
			});
			break;
			case 'Delete':
			var dlg=new mgSimpleDlg({
				wintitle:'Confirm Delete'//如果隐藏则使用action
				,values:{id:o.rowdata.id}//[初始值]
				,a:o.a//[事件来源]:影响出现的位置.
				,tpl_id:'tplMultiDelete'
				,target_id:'divDlg'//目标div
				,_c:'ApiTester',_m:'DeleteTestObj'//<Remote for the action>
				,button_name:'Confirm'//如果隱藏就會用action
				,action: 'Delete'//<对应动作>
				,onCallback:_callback_dlg_default
			});
			break;
			default:break;
		}
	});
	function TestReview(o) {
		$("#divDebug").innerHTML = o2s(o);
	}
	function TestPingPong() {
		var _send_o = {ping: (new Date()).getTime() / 1000};
		aj2014({
			_c: 'ApiTester',
			_m: "PingPong",
			_p: _send_o,
			onCallback: function(o) {
				$("#divReceive").html(o2s(o));
			}
		});
	}
	function AddTestObj() {
		var tr = document.createElement("tr");
		tr.innerHTML = "<td></td><td><input type='text' id='testobj_key'></td><td><input type='text' id='testobj_remark'></td>\n\
		<td><input type='button' value='Save' onclick='SaveTestObj(this)'/><input type='button' value='Cancel' onclick='Cancel(this);'/></td>";
		//把tr追加到表格里面
		$("#TestObjBody").append(tr);
	}
	function ListTestObj() {
		//	var url="ApiTester.ListTestObj.api?lang={$lang}";
		aj2014({
			_c: 'ApiTester',
			_m: "ListTestObj",
			onCallback: function(o) {
				var html = "";
				for (var i in o.table_data) {
					var row = o.table_data[i];
					html += "<tr id='" + row['id'] + "'><td>" + row['id'] + "</td><td>" + row['testobj_key'] + "</td><td>" + row['testobj_remark'] + "</td>\n\
						<td><input type='button' value='修改' onclick='EditRow(this)'/><input type='button' value='删除' onclick='DeleteRow(this)'/></td></tr>";
				}
				$("#TestObjBody").html(html);
			}
		});
	}
	function SaveTestObj(obj) {
		//要保存的数据
		var _data = {"testobj_key": $("#testobj_key").val(), "testobj_remark": $("#testobj_remark").val()};
		//判断是否是修改的数据
		var tr = $(obj).closest("tr");
		if (tr.find("td:eq(0)").html())
		_data["id"] = tr.find("td:eq(0)").html();
		//发送到后台处理
		//var url="ApiTester.SaveTestObj.api?lang={$lang}";
		aj2014({
			_c: 'ApiTester',
			_m: "SaveTestObj",
			_p: _data,
			onCallback: function(o) {
				if (o.STS) {//保存成功
					//完了更新列表
					ListTestObj();
					} else {//保存失败提示
					var _msg = o.errmsg ? o.errmsg : "Error!";
					alert(_msg);
				}
			}
		});
	}
	var OldTr = {};//用于保存修改时原tr的内容。点击取消按钮时可直接取出来重新赋给tr
	function EditRow(obj) {
		var tr = $(obj).closest("tr");
		var tds = tr.find("td");
		var name_a = ["id","testobj_key", 'testobj_remark'];
		//提前把修改前的tr保存到全局变量。为cancel做准备
		OldTr[tr.find("td:eq(0)").html()] = tr.html();
		//遍历tds。把文字变成input输入框
		for (var i in tds) {
			if (i == tds.length - 1) {//最后的td为操作列。故特殊处理
				tds[i].innerHTML = "<input type='button' value='Save' onclick='SaveTestObj(this)'/><input type='button' value='Cancel' onclick='Cancel(this);'/>";
				continue;
			}
			if (i === "0") {//id不能修改
				continue;
			}
			var value = tds[i].innerHTML;
			tds[i].innerHTML = "<input type='text' value='" + value + "' name='" + name_a[i] + "' id='" + name_a[i] + "'/>";
		}
	}
	function DeleteRow(obj) {
		//确认一下是否删除
		if (!confirm("sure delete?"))
		return false;
		var _data = {};
		//获取删除列的id
		var tr = $(obj).closest("tr");
		_data["id"] = tr.find("td:eq(0)").html();
		aj2014({
			_c: 'ApiTester',
			_m: "DeleteTestObj",
			_p: _data,
			onCallback: function(o) {
				if (o.STS == "OK") {//保存成功
					ListTestObj();
					} else {//保存失败提示
					var _msg = o.errmsg ? o.errmsg : "Error!";
					alert(_msg);
				}
			}
		});
	}
	//通用的取消方法
	function Cancel(obj) {
		var tr = $(obj).closest("tr");
		if (OldTr[tr.find("td:eq(0)").html()]) {
			tr.html(OldTr[tr.find("td:eq(0)").html()]);
			} else {
			tr.remove();
		}
	}
	var _callback_dlg_default= function (STS,o) {
		if (STS == 'OK') {
			//$(grid_user).trigger("GridAction", {a: null, action: "Reload"});
			$("#btnListNew").trigger('click');
		}
	}
	$("#btnListNew").on("click", function() {
		grid_user.reload();
	});

	function initYearMonth(obj){
		var p = obj.datebox('panel'), //日期选择对象
		tds = false, //日期选择对象中月份
		span = p.find('.calendar-title').find("span"); //显示月份层的触发控件
		obj.datebox({
			onShowPanel: function () {//显示日趋选择对象后再触发弹出月份层的事件，初始化时没有生成月份层
				span.trigger('click'); //触发click事件弹出月份层
				if (!tds)
					setTimeout(function () {//延时触发获取月份对象，因为上面的事件触发和对象生成有时间间隔
						tds = p.find('div.calendar-menu-month-inner td');
						tds.click(function (e) {
							e.stopPropagation(); //禁止冒泡执行easyui给月份绑定的事件
							var year = /\d{4}/.exec(span.html())[0]//得到年份
								, month = parseInt($(this).attr('abbr'), 10); //月份，这里不需要+1
							obj.datebox('hidePanel')//隐藏日期对象
								.datebox('setValue', year + '-' + month); //设置日期的值
						});
					}, 0)
			},
			parser: function (s) {
				if (!s) return new Date();
				var arr = s.split('-');
				return new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, 1);
			},
			formatter: function (d) { return d.getFullYear() + '-' + (d.getMonth()+1); }
		});
	}
	
	$.parser.onComplete = function(){
		initYearMonth($("#ForMonth"));
	}
	//ESC 键映射，处理强弹出来的全部小窗口.
	$(window).off('keydown').on('keydown', function (e) {
		if (e.keyCode == 27) {
			$(".panel-tool-close").trigger("click");
		}
	});

	window['page_data']={
		lang_a:{
			R_U_SURE:'{I18N_R_U_SURE}'
		}
	};
</script>
</body>
